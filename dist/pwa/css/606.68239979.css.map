{"version":3,"file":"css/606.68239979.css","mappings":";AA6BA;AACE;IACE,cAAc;AAChB;AACF;AACA;AACE;IACE,cAAc;AAChB;AACF;AACA;AACE;IACE,cAAc;AAChB;AACF;;;;ACuSA;EACE,WAAW;EACX,qBAAqB;AACvB;AAEA;AACE;IACE,gBAAgB;IAChB,sBAAsB;AACxB;AACF;AACA;EACE,YAAY;EACZ,WAAW;EACX,oBAAoB;EACpB,YAAY;;EAEZ,yCAAyC;EACzC,iBAAiB;EACjB,WAAW;EACX,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;AAChB;AACA;AACE;;IAEE,4BAA4B;AAC9B;AACF;AAEA;EACE,WAAW;EACX,qBAAqB;EACrB,UAAU;EACV,oBAAoB;EACpB,oBAAoB;EACpB,2BAA2B;EAC3B,sBAAsB;EACtB,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,kBAAkB;AACpB;AACA;EACE,WAAW;EACX,qBAAqB;EACrB,UAAU;EACV,oBAAoB;EACpB,oBAAoB;EACpB,sBAAsB;EACtB,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,kBAAkB;AACpB;AAEA;EACE,WAAW;EACX,qBAAqB;EACrB,UAAU;EACV,oBAAoB;EACpB,oBAAoB;EACpB,sBAAsB;EACtB,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,kBAAkB;AACpB;AAEA;EACE,WAAW;EACX,qBAAqB;EACrB,WAAW;EACX,oBAAoB;EACpB,oBAAoB;EACpB,sBAAsB;EACtB,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,kBAAkB;AACpB;AACA;EACE,qBAAqB;EACrB,UAAU;EACV,oBAAoB;EACpB,oBAAoB;EACpB,6BAA6B;EAC7B,uBAAuB;EACvB,qBAAqB;EACrB,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,kBAAkB;AACpB;AACA;AACE;IACE,aAAa;IACb,2BAA2B;IAC3B,yBAAyB;IACzB,aAAa;AACf;AAEA;IACE,0CAA0C;IAC1C,oCAAoC;IACpC,aAAa;IACb,eAAe;IACf,kBAAkB;AACpB;AACF;AACA;EACE,mBAAmB;EACnB,wBAAwB;EACxB,iBAAiB;EACjB,qBAAqB;EACrB,uBAAuB;EACvB,eAAe;;EAEf,oBAAoB;EACpB,qBAAqB;EACrB,UAAU;AACZ;AAEA;EACE,qBAAqB;EACrB,UAAU;EACV,oBAAoB;EACpB,oBAAoB;EACpB,6BAA6B;EAC7B,yBAAyB;EACzB,qBAAqB;EACrB,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,kBAAkB;AACpB;AAEA;EACE,2BAA2B;AAC7B;AAEA;EACE,yBAAyB;AAC3B;AAEA;AACE;IACE,UAAU;AACZ;AACF;AAEA;EACE,WAAW;EACX,gBAAgB;AAClB;;;;;ACnZA;EACE,UAAU;EACV,cAAc;EACd,kBAAkB;AACpB;AAEA;EACE,uDAAuD;EACvD,4BAA4B;EAC5B,sBAAsB;AACxB;AAEA;AACE;IACE,cAAc;AAChB;AACF;AACA;AACE;IACE,cAAc;AAChB;AACF;AAEA;AACE;IACE,cAAc;AAChB;AACF","sources":["webpack://battleship/./src/components/WelcomeLabel.vue","webpack://battleship/./src/components/Battleground.vue","webpack://battleship/./src/pages/BattleshipGame.vue"],"sourcesContent":["<template>\n  <q-separator></q-separator>\n\n  <q-card-section class=\"text-subitle2 text-white text-center\">\n    <q-img class=\"q-img\"\n      src=\"images/battleship.jpg\"\n    ></q-img>\n  </q-card-section>\n\n  <q-card-section>\n    <div class=\"text-h3 q-mt-sm q-mb-xs text-orange-9 text-center\" v-if=\"show\">Welcome to the Battleship Game</div>\n  </q-card-section>\n\n  <q-separator></q-separator>\n</template>\n\n<script>\nexport default {\n  name: \"WelcomeLable\",\n  data() {\n    return {\n      show: true\n    }\n  }\n}\n</script>\n\n<style Sass>\n\n@media (min-width: 300px) {\n  .q-img{\n    max-width:90vw;\n  }\n}\n@media (min-width: 721px) {\n  .q-img{\n    max-width:75vw;\n  }\n}\n@media (min-width: 1001px) {\n  .q-img{\n    max-width:60vw;\n  }\n}\n\n</style>\n","<template>\n  <div></div>\n\n  <q-card class=\"cardState \">\n    <q-card-section class=\"bg-grey-8 text-white\">\n      <div class=\"text-h6\">current State:</div>\n      <div class=\"text-h6 bg-black\">{{currentState}}</div>\n    </q-card-section>\n  </q-card>\n\n  <div class=\"gameContainer\" v-bind:style=scaleFont >\n                <span v-bind:id=\"'bf-size'+size\" class=\"game\">\n                    <div class=\"battlefieldLeft\">\n                            <!--Numbers -->\n                            <span class=\"xNumberRow\">X</span>\n                              <span v-for=\"n  in size\" :key=\"n\" class=\"numberRow\">{{ n }}</span>\n\n                      <!--row Left -->\n                              <div v-for=\"row in size\" :key=\"row\" class=\"battlefield size{{this.size}}\">\n                                <span class=\"abcCol\">{{intToABC(row)}}</span>\n                                <!--col Left -->\n                                  <div v-for=\"col in size\" :key=\"col\">\n                                    <span v-bind:id=\"'cellLeft-R'+row+'-C'+col\" :class=\"[{'cellHoverGreen': cellHoverGreen}, {'cellHoverRed': !cellHoverGreen}]\" class=\"cell cellLeft\"  data-bs-toggle=\"tooltip\"\n                                          title=\"click to set your Ship\" v-bind:cellIndex='(row-1)*size+(col-1)' v-bind:col='(col-1)'\n                                          v-bind:row='(row-1)' v-bind:value='0'\n                                          @click=\"clickOnLeft\" v-html=\"none\">\n                                    </span>\n                                </div>\n                            </div>\n                    </div><!--battlefieldLeft END -->\n\n                    <div class=\"battlefieldRight clear\">\n                        <!--Numbers -->\n                        <span class=\"middleCutLine\"> | </span>\n                      <span v-for=\"(n, index) in size\" :key=\"index\" class=\"numberRow\">{{ n }}</span>\n                        <span class=\"xNumberRow\">X</span>\n\n                      <!--row Right-->\n                          <div v-for=\"(row, index) in size\" :key=\"index\" class=\"battlefield size{{this.size}}\">\n                            <span class=\"middleCutLine\"> | </span>\n\n                            <!--col Right-->\n\n                              <div v-for=\"(col, index) in size\" :key=\"index\">\n\n                                <span v-bind:id=\"'cellRight-R'+row+'-C'+col\" :class=\"[{'cellHoverGreen': !cellHoverGreen}, {'cellHoverRed': cellHoverGreen}]\" class=\"cell cellRight\"  data-bs-toggle=\"tooltip\"\n                                      title=\"wrong side ;-)\" v-bind:cellIndex='(row-1)*size+(col-1)' v-bind:col='(col-1)'\n                                      v-bind:row='(row-1)' v-bind:value='0'\n                                      @click=\"clickOnRight\" v-html=\"none\">\n                                    </span>\n\n                            </div>\n\n                            <span class=\"abcColRight\">{{intToABC(row)}}</span>\n                        </div><!--battlefield END -->\n\n                        <div class=\"clear\"></div>\n                  </div><!--battlefieldRight END -->\n\n                </span><!--game span END -->\n  </div><!--gameContainer END -->\n</template>\n\n<script>\n//import BattlefieldLeftSide from \"components/BattlefieldLeftSide\";\n//import BattlefieldRightSide from \"components/BattlefieldRightSide\";\n\n\nexport default {\n  name: \"Battleground\",\n  components: {\n    //BattlefieldLeftSide: BattlefieldLeftSide,\n    //BattlefieldRightSide: BattlefieldRightSide\n  },\n  /*\n  mounted:function(){\n    this.method1() //method1 will execute at pageload\n  },*/\n  probs:{\n    testData: {\n      skrri: \"0\",\n      type:'test',\n      kp: true\n    }\n  },\n  data() {\n    return {\n      scaleFont: calcScale(),\n      kp: String(100),\n      leftSetShipsCounter: 0,\n      rightSetShipsCounter: 0,\n      leftShipHitCounter: 0,\n      rightShipHitCounter: 0,\n      randomShips: true,\n      clickOnLeft: this.setLeftShips,\n      clickOnRight: '',\n      currentState:'',\n      cellHoverGreen: true,\n      battleshipCells: createEmpty1DBattlefield(),\n      size: vuePlaygroundSize,\n      shipLeft: \"images/whiteShip.jpg\",\n      none: '',\n      leftShipPic: \"<img src='images/whiteShip.png' alt='S' class='gameContainer' value='1'>\",\n      rightShipPic: '<img src=\\'images/pirateShip.png\\' alt=\\'S\\' class=\\'gameContainer\\' value=\"1\">',\n      leftShipHitPic: 'images/whiteShipHit.png',\n      rightShipHitPic: 'images/pirateShipHit.png',\n      miss: '<img src=\\'images/miss.png\\' alt=\\'S\\' class=\\'gameContainer\\' value=\"0\">',\n\n    };\n  },\n  methods: {\n\n    //Phase1\n    setLeftShips(event) {\n      this.currentState=\"setLeftShips\";\n      // `event` is the native DOM event\n\n      if (event) {\n        if(event.target.getAttribute('value')===\"0\"){\n          setCellValue(event.target.getAttribute('cellIndex'),1)\n          event.target.setAttribute('value',\"1\");\n          event.target.innerHTML = this.leftShipPic;\n          //this.changeCellValueToSign(1);\n          console.log(event.target.getAttribute('cellIndex'))\n          this.leftSetShipsCounter++;\n          console.log( this.leftSetShipsCounter)\n\n          if(this.leftSetShipsCounter===this.size){\n            console.log( \"limit left\")\n            this.clickOnLeft=\"\"\n            this.clickOnRight=this.setRightShips;\n            this.cellHoverGreen=!this.cellHoverGreen\n            event.target.setAttribute('title',\"Wrong Side!\");\n            this.currentState=\"P2 - setRightShips\";\n\n            if(this.randomShips===true){\n              this.setRandomPlayer2Ships();\n            }\n          }\n        }\n      }\n    },\n    setRandomPlayer2Ships(){\n\n\n      for (let i = 0; i < vuePlaygroundSize; i++) {\n\n        //const xxx = JSON.stringify(this.$refs);\n       // alert(xxx)\n\n        /*\n        let currentCell = \"#cellRightValue-R\"+i+\"-C\"+Math.floor(Math.random() * 4);\n        //$(currentCell).addClass(\"shipIsSet\");\n\n        //$(currentCell).html(\"<img src='http://localhost:9000/assets/images/pirateShip.png' alt='S' class='gameContainer' id=this.value/>\");\n        */\n      }\n    },\n    //Phase2\n    setRightShips(event) {\n      this.currentState=\"P2 - setRightShips\";\n      event.target.setAttribute('title',\"click to Set your Ship\");\n      // `event` is the native DOM event\n      if (event) {\n        if(event.target.getAttribute('value')===\"0\"){\n          setCellValue(event.target.getAttribute('cellIndex'),1);\n          event.target.setAttribute('value',\"1\");\n          event.target.innerHTML = this.rightShipPic;\n          //this.changeCellValueToSign(1);\n          console.log(event.target.getAttribute('cellIndex'));\n          this.rightSetShipsCounter++;\n          console.log( this.rightSetShipsCounter);\n          if(this.rightSetShipsCounter===this.size){\n            console.log( \"limit right\");\n            this.clickOnRight=\"\";\n            this.clickOnRight=this.shootRightShips;\n            this.cellHoverGreen=!this.cellHoverGreen;\n            event.target.setAttribute('title',\"Shoot!!!\");\n            this.currentState=\"P3 - shootRightShips\";\n          }\n        }\n      }\n    },\n    //Phase 3\n    shootRightShips(event) {\n      this.currentState=\"P3 - shootRightShips\";\n\n      if (event) {\n        //hit\n        if(event.target.getAttribute('value')===\"1\"){\n          setCellValue(event.target.getAttribute('cellIndex'),2);\n          event.target.setAttribute('value',\"2\");\n          event.target.setAttribute('src',this.rightShipHitPic);\n          event.target.parentNode.setAttribute(\"value\",\"2\");\n          console.log(event.target.getAttribute('cellIndex'));\n\n          this.rightShipHitCounter++;\n\n          console.log( \"hit!\");\n          if(this.rightShipHitCounter===this.size){\n            setTimeout(function(){alert(\"Left Player Won!!!!!\")}, 500);\n          }\n        }\n\n        //miss\n        if(event.target.getAttribute('value')===\"0\"){\n          //miss pics\n          //event.target.setAttribute('src',\"images/miss.png\");\n          event.target.innerHTML = this.miss;\n          setTimeout(function(){ event.target.firstChild.setAttribute('src',\"images/missAfter.png\");}, 1000);\n          setTimeout(function(){ event.target.firstChild.setAttribute('src',\"images/missAfterAfter.png\");}, 1700);\n          console.log( \"miss!\");\n        }\n      }\n      //change Player\n      this.clickOnRight=\"\";\n      this.clickOnLeft=this.shootLeftShips;\n      this.cellHoverGreen=!this.cellHoverGreen;\n      this.currentState=\"P4 - shootLeftShips\";\n    },\n    //Phase 4\n    shootLeftShips(event) {\n      this.currentState=\"P4 - shootLeftShips\";\n      if (event) {\n        //hit\n        if(event.target.getAttribute('value')===\"1\"){\n          setCellValue(event.target.getAttribute('cellIndex'),2);\n          event.target.setAttribute('value',\"2\");\n          event.target.setAttribute('src',this.leftShipHitPic);\n          event.target.parentNode.setAttribute(\"value\",\"2\");\n          console.log(event.target.getAttribute('cellIndex'));\n\n          this.leftShipHitCounter++;\n\n          console.log( \"hit!\");\n          if(this.leftShipHitCounter===this.size){\n            setTimeout(function(){alert(\"Right Player Won!!!!!\")}, 500);\n          }\n        }\n\n        //miss\n        if(event.target.getAttribute('value')===\"0\"){\n          //miss pics\n          event.target.innerHTML = this.miss;\n          setTimeout(function(){ event.target.firstChild.setAttribute('src',\"images/missAfter.png\");}, 1000);\n          setTimeout(function(){ event.target.firstChild.setAttribute('src',\"images/missAfterAfter.png\");}, 1700);\n          console.log( \"miss!\");\n        }\n      }\n      //change Player\n      this.clickOnLeft=\"\";\n      this.clickOnRight=this.shootRightShips;\n      this.cellHoverGreen=!this.cellHoverGreen;\n      this.currentState=\"P3 - shootRightShips\";\n    },\n    push(n) {\n      return \"index: \" + n\n    },\n    intToABC(row) {\n      return String.fromCharCode(row + 64)\n    },\n    cellValue(col) {\n      return battleshipCells[col]\n    },\n    changeCellValueToSign(cellIndex){\n      if(battleshipCells[cellIndex] === 0){\n        return \"_\"\n      }\n      if(battleshipCells[cellIndex] === 1){\n        return \"S\"\n      }\n      if(battleshipCells[cellIndex] === 2){\n        return \"X\"\n      }\n    }\n  }\n\n}\nlet vuePlaygroundSize = 4;\nlet battleshipCells = createEmpty1DBattlefield();\nlet battleshipLeftCells = createEmpty1DBattlefield();\nlet battleshipRightCells = createEmpty1DBattlefield();\nlet battleshipCellMatrix = createBattlefieldMatrix(vuePlaygroundSize, vuePlaygroundSize, 0)\n\nfunction createBattlefieldMatrix(rows, cols, defaultValue) {\n  let arr = [];\n  // Creates all lines:\n  for (let i = 0; i < rows; i++) {\n    // Creates an empty line\n    arr.push([]);\n    // Adds cols to the empty line:\n    arr[i].push(new Array(cols));\n\n    for (let j = 0; j < cols; j++) {\n      // Initializes:\n      arr[i][j] = defaultValue;\n    }\n  }\n  return arr;\n}\n\nfunction createEmpty1DBattlefield() {\n  let battleshipCells = []\n  for (let i = 0; i < vuePlaygroundSize * vuePlaygroundSize; i++) {\n    battleshipCells.push(0)\n  }\n  return battleshipCells\n}\n\nfunction setCellValue(index, cellValue) {\n  battleshipCells[index]=cellValue\n}\n\nfunction indexTorRow(index) {\n  return (Math.floor(index / vuePlaygroundSize));\n}\n\nfunction indexToCol(index) {\n  return (Math.floor(index % vuePlaygroundSize));\n}\n\nfunction cellToIndex(row, col) {\n  return (Math.floor(row * vuePlaygroundSize + col));\n}\n\nconsole.log(createBattlefieldMatrix(vuePlaygroundSize, vuePlaygroundSize, 0));\nconsole.log(\"cell value: \" + battleshipCells[3]);\n\n//form Old Skript\n\nfunction calcScale(){\n  return \"font-size:calc(125% + \"+Math.round((4.2+vuePlaygroundSize)/vuePlaygroundSize)+\"vw);\"\n}\n\n</script>\n\n\n<style>\n.battlefieldLeft,.battlefieldRight{\n  float: left;\n  justify-content: left;\n}\n\n@media (min-width: 400px) {\n  .battlefieldRight {\n    /*float: right;*/\n    justify-content: right;\n  }\n}\n.gameContainer {\n  height: 100%;\n  width: 100%;\n  /*min-width: 330px;*/\n  display:flex;\n\n  font-family: \"Verdana\",Geneva, sans-serif;\n  font-weight: bold;\n  color:black;\n  justify-content: center;\n  align-items: center;\n  line-height: 1;\n}\n@media (min-width: 900px) {\n  .gameContainer {\n\n    font-size:calc(100% + 2.5vw);\n  }\n}\n\n.numberRow{\n  color:white;\n  display: inline-block;\n  float:left;\n  border-style: outset;\n  border-width: 0.05em;\n  /*background-color: black;*/\n  border-color: darkgray;\n  width: 1.2em;\n  height: 1.2em;\n  margin:0.1em;\n  text-align: center;\n}\n.xNumberRow{\n  color:black;\n  display: inline-block;\n  float:left;\n  border-style: outset;\n  border-width: 0.05em;\n  border-color: darkgray;\n  width: 1.2em;\n  height: 1.2em;\n  margin:0.1em;\n  text-align: center;\n}\n\n.abcCol{\n  color:white;\n  display: inline-block;\n  float:left;\n  border-style: outset;\n  border-width: 0.05em;\n  border-color: darkgray;\n  width: 1.2em;\n  height: 1.2em;\n  margin:0.1em;\n  text-align: center;\n}\n\n.abcColRight{\n  color:white;\n  display: inline-block;\n  float:right;\n  border-style: outset;\n  border-width: 0.05em;\n  border-color: darkgray;\n  width: 1.2em;\n  height: 1.2em;\n  margin:0.1em;\n  text-align: center;\n}\n.middleCutLine{\n  display: inline-block;\n  float:left;\n  border-style: outset;\n  border-width: 0.05em;\n  /*background-color: #E0E0FF;*/\n  background-color: black;\n  border-color: #f6f6FF;\n  width: 0.4em;\n  height: 1.2em;\n  margin:0.1em;\n  text-align: center;\n}\n@media (min-width: 300px) {\n  .game {\n    display: grid;\n    grid-template-columns: auto;\n    background-color: #2196F3;\n    padding: 10px;\n  }\n\n  .grid-item {\n    background-color: rgba(255, 255, 255, 0.8);\n    border: 1px solid rgba(0, 0, 0, 0.8);\n    padding: 20px;\n    font-size: 30px;\n    text-align: center;\n  }\n}\n.game {\n  border-style: inset;\n  /*border-width: 0.05em;*/\n  border-spacing: 0;\n  border-color: #f6f6FF;\n  background-color: black;\n  padding: 0.05em;\n\n  /*min-width: 375px;*/\n  display: inline-block;\n  float:left;\n}\n\n.cell {\n  display: inline-block;\n  float:left;\n  border-style: outset;\n  border-width: 0.05em;\n  /*background-color: #E0E0FF;*/\n  background-color: #1668b5;\n  border-color: #f6f6FF;\n  width: 1.2em;\n  height: 1.2em;\n  margin:0.1em;\n  text-align: center;\n}\n\n.cellHoverGreen:hover {\n  background-color: darkgreen;\n}\n\n.cellHoverRed:hover {\n  background-color: darkred;\n}\n\n@media only screen and (max-width: 700px) {\n  .clear {\n    clear:both;\n  }\n}\n\n.cardState{\n  width: 20vw;\n  max-width: 250px;\n}\n\n\n</style>\n","<template>\n  <div id=\"q-app\" class=\"bg-image\" style=\"min-height: 100vh;\">\n    <div class=\"q-pa-md row items-start q-gutter-md \">\n\n      <q-card bordered class=\"my-card\" flat style=\"background: radial-gradient(circle, #383838 0%, #1d1d1d 100%)\">\n\n        <q-slide-transition>\n\n          <div v-show=\"expandedPic\">\n\n            <WelcomeLabel></WelcomeLabel>\n\n            <BattleshipSettings></BattleshipSettings>\n          </div>\n        </q-slide-transition>\n        <q-btn\n          :icon=\"expandedPic ?'keyboard_arrow_up' : 'keyboard_arrow_down'\"\n          color=\"grey\"\n          dense\n          flat\n          round\n          @click=\"expandedPic = !expandedPic;expanded = !expanded\"\n        ></q-btn>\n\n        <q-card-actions>\n          <q-space></q-space>\n          <q-btn\n            :icon=\"expanded ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\"\n            color=\"white\"\n            dense\n            flat\n            round\n            @click=\"expanded = !expanded ; expandedPic = !expandedPic\"\n          ></q-btn>\n        </q-card-actions>\n\n        <q-slide-transition>\n          <div v-show=\"expanded\">\n            <q-separator></q-separator>\n            <q-card-section class=\"text-subitle2 text-white\">\n              <q-card-section class=\"text-subitle2 text-white text-center\">\n              <q-img class=\"b-img text-center\"\n                     src=\"images/battleship.jpg\"\n              ></q-img>\n                </q-card-section>\n              <!--BattleshipStepper></BattleshipStepper-->\n                <BattleshipState></BattleshipState>\n              <Battleground></Battleground>\n                <!--BattlefildSizeSlider :propsName=\"example\"></BattlefildSizeSlider-->\n            </q-card-section>\n          </div>\n        </q-slide-transition>\n      </q-card>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport WelcomeLabel from \"components/WelcomeLabel\";\nimport BattleshipSettings from \"components/BattleshipSettings\";\nimport Battleground from \"components/Battleground\";\nimport BattleshipState from \"components/BattleshipState\";\n//import BattlefildSizeSlider from \"components/BattlefildSizeSlider\";\n//import BattleshipStepper from \"components/BattleshipStepper\";\nimport {ref} from 'vue'\n\nexport default {\n  name: \"BattleshipGame.vue\",\n  components: {\n    WelcomeLabel,\n    BattleshipSettings,\n    Battleground,\n    BattleshipState,\n    //BattlefildSizeSlider:BattlefildSizeSlider,\n    //BattleshipStepper, BattleshipStepper,\n\n  },\n  setup() {\n    return {\n      expandedPic: ref(true),\n      expanded: ref(false),\n      example: 'Send this variable to the child',\n    }\n  }\n}\n\n</script>\n\n<style>\n.my-card {\n  width: 90%;\n  max-width: 95%;\n  /*display: block;*/\n}\n\n.bg-image {\n  background-image: url(\"/images/seaBackground1Wide.jpg\");\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n@media (min-width: 300px) {\n  .b-img{\n    max-width:60vw;\n  }\n}\n@media (min-width: 721px) {\n  .b-img{\n    max-width:50vw;\n  }\n}\n\n@media (min-width: 1001px) {\n  .b-img{\n    max-width:40vw;\n  }\n}\n\n</style>\n"],"names":[],"sourceRoot":""}