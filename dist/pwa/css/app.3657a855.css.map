{"version":3,"file":"css/app.3657a855.css","mappings":"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","sources":["webpack://battleship/./src/pages/Login.vue","webpack://battleship/./src/pages/Register.vue","webpack://battleship/./src/components/WelcomeLabel.vue","webpack://battleship/./src/components/Battleground.vue","webpack://battleship/./src/pages/BattleshipGame.vue"],"sourcesContent":["<template>\r\n  <main class=\"login row items-center d-flex justify-center bg-image\" style=\"height: 100vh\" >\r\n\r\n    <section class=\"forms\">\r\n      <form class=\"login\" @submit.prevent=\"login\"\r\n            style=\"padding-top: 30px\">\r\n\r\n        <q-img class=\"q-img\"\r\n               src=\"images/battleship.jpg\"\r\n        ></q-img>\r\n\r\n        <h2 class=\"text-center\">Login</h2>\r\n\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email address\"\r\n          v-model=\"login_form.email\" />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          v-model=\"login_form.password\" />\r\n\r\n        <p class=\"forgot-password text-right\">\r\n          <router-link to=\"/forgetPassword\">Forgot Password?</router-link>\r\n        </p>\r\n\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Login\" />\r\n\r\n        <div>\r\n          <p class=\"text-center\">\r\n            You don't have an account ? <br>\r\n            You can <router-link to=\"/register\">register</router-link>\r\n            <br>\r\n\r\n            <button @click=\"googleLogin\" class=\"social-button\">\r\n              <img\r\n                alt=\"Google Logo\"\r\n                src=\"icons/googleSingIn.png\" style=\"hight:50px; width:300px\"\r\n              />\r\n            </button>\r\n            <br>\r\n            <button @click=\"githubLogin\" class=\"social-button\">\r\n              <img\r\n                alt=\"Github Logo\"\r\n                src=\"icons/gitHubSignIn.png\" style=\"hight:50px; width:350px\"\r\n              />\r\n            </button>\r\n            <br>\r\n            <button @click=\"facebookLogin\" class=\"social-button\">\r\n              <img\r\n                alt=\"Facebook Logo\"\r\n                src=\"icons/facebookLogin.png\" style=\"hight:50px; width:350px\"\r\n              />\r\n            </button>\r\n          </p>\r\n        </div>\r\n\r\n      </form>\r\n\r\n    </section>\r\n\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nimport { GoogleAuthProvider, GithubAuthProvider, FacebookAuthProvider   } from \"firebase/auth\";\r\nimport {\r\n  getAuth, getRedirectResult,\r\n  signInWithRedirect,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\n\r\nexport default {\r\n  setup () {\r\n    const login_form = ref({});\r\n    const store = useStore();\r\n\r\n    const login = () => {\r\n      store.dispatch('login', login_form.value);\r\n    }\r\n    const googleLogin = () => {\r\n\r\n      store.dispatch('providerLogin', new GoogleAuthProvider());\r\n    }\r\n    const githubLogin = () => {\r\n      store.dispatch('providerLogin', new GithubAuthProvider());\r\n    }\r\n    const facebookLogin = () => {\r\n      store.dispatch('providerLogin', new FacebookAuthProvider());\r\n    }\r\n\r\n    return {\r\n      login_form,\r\n      login,\r\n      googleLogin,\r\n      githubLogin,\r\n      facebookLogin\r\n    }\r\n  },\r\n  methods: {\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n.bg-image {\r\n  background-image: url(\"/images/seaBackground1Wide.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  hight:100%;\r\n  max-height: 100%;\r\n}\r\n.q-img{\r\n  max-width:66vw;\r\n}\r\n\r\n.forms {\r\n  display: flex;\r\n  max-width: 50vw;\r\n}\r\n\r\nform {\r\n  flex: 1 1 0%;\r\n  padding: 8rem 1rem 1rem;\r\n}\r\n\r\nform.login {\r\n  color: #FFF;\r\n  background-color: rgb(0, 0, 0);\r\n  background-image: linear-gradient(\r\n    to bottom right,\r\n    rgb(0, 0, 0) 0%,\r\n    rgb(80, 80, 80) 100%\r\n  );\r\n}\r\n\r\nh2 {\r\n  font-size: 2rem;\r\n  text-transform: uppercase;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\ninput {\r\n  appearance: none;\r\n  border: none;\r\n  outline: none;\r\n  background: none;\r\n\r\n  display: block;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 2rem;\r\n  padding: 0.5rem 0rem;\r\n}\r\n\r\ninput:not([type=\"submit\"]) {\r\n  opacity: 0.8;\r\n  transition: 0.4s;\r\n}\r\n\r\ninput:focus:not([type=\"submit\"]) {\r\n  opacity: 1;\r\n}\r\n\r\ninput::placeholder {\r\n  color: inherit;\r\n}\r\n\r\nform.login input:not([type=\"submit\"]) {\r\n  color: #FFF;\r\n  border-bottom: 2px solid #FFF;\r\n}\r\n\r\nform.login input[type=\"submit\"] {\r\n  background-color: #FFF;\r\n  color: rgb(0, 0, 0);\r\n  font-weight: 700;\r\n  padding: 1rem 2rem;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n}\r\n</style>\r\n","<template>\r\n  <main class=\"reg row items-center d-flex justify-center bg-image\" style=\"height: 100vh\" >\r\n    <section class=\"forms\">\r\n      <div style=\"height: 200px\">\r\n        <q-img class=\"q-img\"\r\n               src=\"images/battleship.jpg\"\r\n        ></q-img>\r\n      </div>\r\n\r\n      <form class=\"register\" @submit.prevent=\"register\">\r\n        <h2 class=\"text-center\">Register</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter your Name\"\r\n          v-model=\"register_form.displayName\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"role\"\r\n          v-model=\"register_form.role\" />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email-Address\"\r\n          v-model=\"register_form.email\" />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          v-model=\"register_form.password\" />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Register\" />\r\n\r\n        <v-card-text>\r\n          <p class=\"text-center reg row items-center d-flex justify-center\">\r\n            or go back to <router-link to=\"/login\">login</router-link>.\r\n          </p>\r\n        </v-card-text>\r\n      </form>\r\n\r\n    </section>\r\n\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default {\r\n  setup () {\r\n    const register_form = ref({});\r\n    const store = useStore();\r\n\r\n    const register = () => {\r\n      store.dispatch('register', register_form.value);\r\n      console.log(register_form.value)\r\n      console.log(register_form.value.email)\r\n      console.log(register_form.value.role)\r\n    }\r\n\r\n    return {\r\n      register_form,\r\n      register\r\n    }\r\n  },\r\n  methods: {\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.bg-image {\r\n  background-image: url(\"/images/seaBackground1Wide.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  hight:100vh;\r\n}\r\n\r\n.q-img{\r\n  max-width:66vw;\r\n}\r\n\r\n.forms {\r\n  display: flex;\r\n  max-width: 50vw;\r\n}\r\n\r\nform {\r\n  flex: 1 1 0%;\r\n  padding: 8rem 1rem 1rem;\r\n}\r\n\r\nform.register {\r\n  color: #FFF;\r\n  background-color: rgb(0, 0, 0);\r\n  background-image: linear-gradient(\r\n    to bottom right,\r\n    rgb(0, 0, 0) 0%,\r\n    rgb(80, 80, 80) 100%\r\n  );\r\n}\r\n\r\nh2 {\r\n  font-size: 2rem;\r\n  text-transform: uppercase;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\ninput {\r\n  appearance: none;\r\n  border: none;\r\n  outline: none;\r\n  background: none;\r\n\r\n  display: block;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 2rem;\r\n  padding: 0.5rem 0rem;\r\n}\r\n\r\ninput:not([type=\"submit\"]) {\r\n  opacity: 0.8;\r\n  transition: 0.4s;\r\n}\r\n\r\ninput:focus:not([type=\"submit\"]) {\r\n  opacity: 1;\r\n}\r\n\r\ninput::placeholder {\r\n  color: inherit;\r\n}\r\n\r\nform.register input:not([type=\"submit\"]) {\r\n  color: #FFF;\r\n  border-bottom: 2px solid #FFF;\r\n}\r\n\r\nform.register input[type=\"submit\"] {\r\n  background-color: #FFF;\r\n  color: rgb(0, 0, 0);\r\n  font-weight: 700;\r\n  padding: 1rem 2rem;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n}\r\n</style>\r\n","<template>\r\n  <q-separator></q-separator>\r\n\r\n  <q-card-section class=\"text-subitle2 text-white text-center\">\r\n    <q-img class=\"q-img\"\r\n      src=\"images/battleship.jpg\"\r\n    ></q-img>\r\n  </q-card-section>\r\n\r\n  <q-card-section>\r\n    <div class=\"text-h3 q-mt-sm q-mb-xs text-orange-9 text-center\" v-if=\"show\">Welcome\r\n      <p v-if=\"$store.state.user\">{{$store.state.user.displayName}}</p>\r\n      to the Battleship Game</div>\r\n  </q-card-section>\r\n\r\n  <q-separator></q-separator>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"WelcomeLable\",\r\n  data() {\r\n    return {\r\n      show: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style Sass>\r\n\r\n@media (min-width: 300px) {\r\n  .q-img{\r\n    max-width:90vw;\r\n    display: inline-block;\r\n\r\n  }\r\n}\r\n@media (min-width: 721px) {\r\n  .q-img{\r\n    max-width:75vw;\r\n  }\r\n}\r\n@media (min-width: 1001px) {\r\n  .q-img{\r\n    max-width:60vw;\r\n  }\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div></div>\r\n\r\n  <q-card class=\"cardState \">\r\n    <q-card-section class=\"bg-grey-8 text-white\">\r\n      <div class=\"text-h6\">current State:</div>\r\n      <div class=\"text-h6 bg-black\">{{currentState}}</div>\r\n    </q-card-section>\r\n  </q-card>\r\n\r\n  <div class=\"gameContainer\" v-bind:style=scaleFont >\r\n                <span v-bind:id=\"'bf-size'+size\" class=\"game\">\r\n                    <div class=\"battlefieldLeft\">\r\n                            <!--Numbers -->\r\n                            <span class=\"xNumberRow\">X</span>\r\n                              <span v-for=\"n  in size\" :key=\"n\" class=\"numberRow\">{{ n }}</span>\r\n\r\n                      <!--row Left -->\r\n                              <div v-for=\"row in size\" :key=\"row\" class=\"battlefield size{{this.size}}\">\r\n                                <span class=\"abcCol\">{{intToABC(row)}}</span>\r\n                                <!--col Left -->\r\n                                  <div v-for=\"col in size\" :key=\"col\">\r\n                                    <span v-bind:id=\"'cellLeft-R'+row+'-C'+col\" :class=\"[{'cellHoverGreen': cellHoverGreen}, {'cellHoverRed': !cellHoverGreen}]\" class=\"cell cellLeft\"  data-bs-toggle=\"tooltip\"\r\n                                          title=\"click to set your Ship\" v-bind:cellIndex='(row-1)*size+(col-1)' v-bind:col='(col-1)'\r\n                                          v-bind:row='(row-1)' v-bind:value='0'\r\n                                          @click=\"clickOnLeft\" v-html=\"none\">\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                    </div><!--battlefieldLeft END -->\r\n\r\n                    <div class=\"battlefieldRight clear\">\r\n                        <!--Numbers -->\r\n                        <span class=\"middleCutLine\"> | </span>\r\n                      <span v-for=\"(n, index) in size\" :key=\"index\" class=\"numberRow\">{{ n }}</span>\r\n                        <span class=\"xNumberRow\">X</span>\r\n\r\n                      <!--row Right-->\r\n                          <div v-for=\"(row, index) in size\" :key=\"index\" class=\"battlefield size{{this.size}}\">\r\n                            <span class=\"middleCutLine\"> | </span>\r\n\r\n                            <!--col Right-->\r\n\r\n                              <div v-for=\"(col, index) in size\" :key=\"index\">\r\n\r\n                                <span v-bind:id=\"'cellRight-R'+row+'-C'+col\" :class=\"[{'cellHoverGreen': !cellHoverGreen}, {'cellHoverRed': cellHoverGreen}]\" class=\"cell cellRight\"  data-bs-toggle=\"tooltip\"\r\n                                      title=\"wrong side ;-)\" v-bind:cellIndex='(row-1)*size+(col-1)' v-bind:col='(col-1)'\r\n                                      v-bind:row='(row-1)' v-bind:value='0'\r\n                                      @click=\"clickOnRight\" v-html=\"none\">\r\n                                    </span>\r\n\r\n                            </div>\r\n\r\n                            <span class=\"abcColRight\">{{intToABC(row)}}</span>\r\n                        </div><!--battlefield END -->\r\n\r\n                        <div class=\"clear\"></div>\r\n                  </div><!--battlefieldRight END -->\r\n\r\n                </span><!--game span END -->\r\n  </div><!--gameContainer END -->\r\n</template>\r\n\r\n<script>\r\n//import BattlefieldLeftSide from \"components/BattlefieldLeftSide\";\r\n//import BattlefieldRightSide from \"components/BattlefieldRightSide\";\r\n\r\n\r\nexport default {\r\n  name: \"Battleground\",\r\n  components: {\r\n    //BattlefieldLeftSide: BattlefieldLeftSide,\r\n    //BattlefieldRightSide: BattlefieldRightSide\r\n  },\r\n  /*\r\n  mounted:function(){\r\n    this.method1() //method1 will execute at pageload\r\n  },*/\r\n  probs:{\r\n    testData: {\r\n      skrri: \"0\",\r\n      type:'test',\r\n      kp: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      scaleFont: calcScale(),\r\n      kp: String(100),\r\n      leftSetShipsCounter: 0,\r\n      rightSetShipsCounter: 0,\r\n      leftShipHitCounter: 0,\r\n      rightShipHitCounter: 0,\r\n      randomShips: true,\r\n      clickOnLeft: this.setLeftShips,\r\n      clickOnRight: '',\r\n      currentState:'',\r\n      cellHoverGreen: true,\r\n      battleshipCells: createEmpty1DBattlefield(),\r\n      size: vuePlaygroundSize,\r\n      shipLeft: \"images/whiteShip.jpg\",\r\n      none: '',\r\n      leftShipPic: \"<img src='images/whiteShip.png' alt='S' class='gameContainer' value='1'>\",\r\n      rightShipPic: '<img src=\\'images/pirateShip.png\\' alt=\\'S\\' class=\\'gameContainer\\' value=\"1\">',\r\n      leftShipHitPic: 'images/whiteShipHit.png',\r\n      rightShipHitPic: 'images/pirateShipHit.png',\r\n      miss: '<img src=\\'images/miss.png\\' alt=\\'S\\' class=\\'gameContainer\\' value=\"0\">',\r\n\r\n    };\r\n  },\r\n  methods: {\r\n\r\n    //Phase1\r\n    setLeftShips(event) {\r\n      this.currentState=\"setLeftShips\";\r\n      // `event` is the native DOM event\r\n\r\n      if (event) {\r\n        if(event.target.getAttribute('value')===\"0\"){\r\n          setCellValue(event.target.getAttribute('cellIndex'),1)\r\n          event.target.setAttribute('value',\"1\");\r\n          event.target.innerHTML = this.leftShipPic;\r\n          //this.changeCellValueToSign(1);\r\n          console.log(event.target.getAttribute('cellIndex'))\r\n          this.leftSetShipsCounter++;\r\n          console.log( this.leftSetShipsCounter)\r\n\r\n          if(this.leftSetShipsCounter===this.size){\r\n            console.log( \"limit left\")\r\n            this.clickOnLeft=\"\"\r\n            this.clickOnRight=this.setRightShips;\r\n            this.cellHoverGreen=!this.cellHoverGreen\r\n            event.target.setAttribute('title',\"Wrong Side!\");\r\n            this.currentState=\"P2 - setRightShips\";\r\n\r\n            if(this.randomShips===true){\r\n              this.setRandomPlayer2Ships();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    setRandomPlayer2Ships(){\r\n\r\n\r\n      for (let i = 0; i < vuePlaygroundSize; i++) {\r\n\r\n        //const xxx = JSON.stringify(this.$refs);\r\n       // alert(xxx)\r\n\r\n        /*\r\n        let currentCell = \"#cellRightValue-R\"+i+\"-C\"+Math.floor(Math.random() * 4);\r\n        //$(currentCell).addClass(\"shipIsSet\");\r\n\r\n        //$(currentCell).html(\"<img src='http://localhost:9000/assets/images/pirateShip.png' alt='S' class='gameContainer' id=this.value/>\");\r\n        */\r\n      }\r\n    },\r\n    //Phase2\r\n    setRightShips(event) {\r\n      this.currentState=\"P2 - setRightShips\";\r\n      event.target.setAttribute('title',\"click to Set your Ship\");\r\n      // `event` is the native DOM event\r\n      if (event) {\r\n        if(event.target.getAttribute('value')===\"0\"){\r\n          setCellValue(event.target.getAttribute('cellIndex'),1);\r\n          event.target.setAttribute('value',\"1\");\r\n          event.target.innerHTML = this.rightShipPic;\r\n          //this.changeCellValueToSign(1);\r\n          console.log(event.target.getAttribute('cellIndex'));\r\n          this.rightSetShipsCounter++;\r\n          console.log( this.rightSetShipsCounter);\r\n          if(this.rightSetShipsCounter===this.size){\r\n            console.log( \"limit right\");\r\n            this.clickOnRight=\"\";\r\n            this.clickOnRight=this.shootRightShips;\r\n            this.cellHoverGreen=!this.cellHoverGreen;\r\n            event.target.setAttribute('title',\"Shoot!!!\");\r\n            this.currentState=\"P3 - shootRightShips\";\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //Phase 3\r\n    shootRightShips(event) {\r\n      this.currentState=\"P3 - shootRightShips\";\r\n\r\n      if (event) {\r\n        //hit\r\n        if(event.target.getAttribute('value')===\"1\"){\r\n          setCellValue(event.target.getAttribute('cellIndex'),2);\r\n          event.target.setAttribute('value',\"2\");\r\n          event.target.setAttribute('src',this.rightShipHitPic);\r\n          event.target.parentNode.setAttribute(\"value\",\"2\");\r\n          console.log(event.target.getAttribute('cellIndex'));\r\n\r\n          this.rightShipHitCounter++;\r\n\r\n          console.log( \"hit!\");\r\n          if(this.rightShipHitCounter===this.size){\r\n            setTimeout(function(){alert(\"Left Player Won!!!!!\")}, 500);\r\n          }\r\n        }\r\n\r\n        //miss\r\n        if(event.target.getAttribute('value')===\"0\"){\r\n          //miss pics\r\n          //event.target.setAttribute('src',\"images/miss.png\");\r\n          event.target.innerHTML = this.miss;\r\n          setTimeout(function(){ event.target.firstChild.setAttribute('src',\"images/missAfter.png\");}, 1000);\r\n          setTimeout(function(){ event.target.firstChild.setAttribute('src',\"images/missAfterAfter.png\");}, 1700);\r\n          console.log( \"miss!\");\r\n        }\r\n      }\r\n      //change Player\r\n      this.clickOnRight=\"\";\r\n      this.clickOnLeft=this.shootLeftShips;\r\n      this.cellHoverGreen=!this.cellHoverGreen;\r\n      this.currentState=\"P4 - shootLeftShips\";\r\n    },\r\n    //Phase 4\r\n    shootLeftShips(event) {\r\n      this.currentState=\"P4 - shootLeftShips\";\r\n      if (event) {\r\n        //hit\r\n        if(event.target.getAttribute('value')===\"1\"){\r\n          setCellValue(event.target.getAttribute('cellIndex'),2);\r\n          event.target.setAttribute('value',\"2\");\r\n          event.target.setAttribute('src',this.leftShipHitPic);\r\n          event.target.parentNode.setAttribute(\"value\",\"2\");\r\n          console.log(event.target.getAttribute('cellIndex'));\r\n\r\n          this.leftShipHitCounter++;\r\n\r\n          console.log( \"hit!\");\r\n          if(this.leftShipHitCounter===this.size){\r\n            setTimeout(function(){alert(\"Right Player Won!!!!!\")}, 500);\r\n          }\r\n        }\r\n\r\n        //miss\r\n        if(event.target.getAttribute('value')===\"0\"){\r\n          //miss pics\r\n          event.target.innerHTML = this.miss;\r\n          setTimeout(function(){ event.target.firstChild.setAttribute('src',\"images/missAfter.png\");}, 1000);\r\n          setTimeout(function(){ event.target.firstChild.setAttribute('src',\"images/missAfterAfter.png\");}, 1700);\r\n          console.log( \"miss!\");\r\n        }\r\n      }\r\n      //change Player\r\n      this.clickOnLeft=\"\";\r\n      this.clickOnRight=this.shootRightShips;\r\n      this.cellHoverGreen=!this.cellHoverGreen;\r\n      this.currentState=\"P3 - shootRightShips\";\r\n    },\r\n    push(n) {\r\n      return \"index: \" + n\r\n    },\r\n    intToABC(row) {\r\n      return String.fromCharCode(row + 64)\r\n    },\r\n    cellValue(col) {\r\n      return battleshipCells[col]\r\n    },\r\n    changeCellValueToSign(cellIndex){\r\n      if(battleshipCells[cellIndex] === 0){\r\n        return \"_\"\r\n      }\r\n      if(battleshipCells[cellIndex] === 1){\r\n        return \"S\"\r\n      }\r\n      if(battleshipCells[cellIndex] === 2){\r\n        return \"X\"\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\nlet vuePlaygroundSize = 4;\r\nlet battleshipCells = createEmpty1DBattlefield();\r\nlet battleshipLeftCells = createEmpty1DBattlefield();\r\nlet battleshipRightCells = createEmpty1DBattlefield();\r\nlet battleshipCellMatrix = createBattlefieldMatrix(vuePlaygroundSize, vuePlaygroundSize, 0)\r\n\r\nfunction createBattlefieldMatrix(rows, cols, defaultValue) {\r\n  let arr = [];\r\n  // Creates all lines:\r\n  for (let i = 0; i < rows; i++) {\r\n    // Creates an empty line\r\n    arr.push([]);\r\n    // Adds cols to the empty line:\r\n    arr[i].push(new Array(cols));\r\n\r\n    for (let j = 0; j < cols; j++) {\r\n      // Initializes:\r\n      arr[i][j] = defaultValue;\r\n    }\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction createEmpty1DBattlefield() {\r\n  let battleshipCells = []\r\n  for (let i = 0; i < vuePlaygroundSize * vuePlaygroundSize; i++) {\r\n    battleshipCells.push(0)\r\n  }\r\n  return battleshipCells\r\n}\r\n\r\nfunction setCellValue(index, cellValue) {\r\n  battleshipCells[index]=cellValue\r\n}\r\n\r\nfunction indexTorRow(index) {\r\n  return (Math.floor(index / vuePlaygroundSize));\r\n}\r\n\r\nfunction indexToCol(index) {\r\n  return (Math.floor(index % vuePlaygroundSize));\r\n}\r\n\r\nfunction cellToIndex(row, col) {\r\n  return (Math.floor(row * vuePlaygroundSize + col));\r\n}\r\n\r\nconsole.log(createBattlefieldMatrix(vuePlaygroundSize, vuePlaygroundSize, 0));\r\nconsole.log(\"cell value: \" + battleshipCells[3]);\r\n\r\n//form Old Skript\r\n\r\nfunction calcScale(){\r\n  return \"font-size:calc(125% + \"+Math.round((4.2+vuePlaygroundSize)/vuePlaygroundSize)+\"vw);\"\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style>\r\n.battlefieldLeft,.battlefieldRight{\r\n  float: left;\r\n  justify-content: left;\r\n}\r\n\r\n@media (min-width: 400px) {\r\n  .battlefieldRight {\r\n    /*float: right;*/\r\n    justify-content: right;\r\n  }\r\n}\r\n.gameContainer {\r\n  height: 100%;\r\n  width: 100%;\r\n  /*min-width: 330px;*/\r\n  display:flex;\r\n\r\n  font-family: \"Verdana\",Geneva, sans-serif;\r\n  font-weight: bold;\r\n  color:black;\r\n  justify-content: center;\r\n  align-items: center;\r\n  line-height: 1;\r\n}\r\n@media (min-width: 900px) {\r\n  .gameContainer {\r\n\r\n    font-size:calc(100% + 2.5vw);\r\n  }\r\n}\r\n\r\n.numberRow{\r\n  color:white;\r\n  display: inline-block;\r\n  float:left;\r\n  border-style: outset;\r\n  border-width: 0.05em;\r\n  /*background-color: black;*/\r\n  border-color: darkgray;\r\n  width: 1.2em;\r\n  height: 1.2em;\r\n  margin:0.1em;\r\n  text-align: center;\r\n}\r\n.xNumberRow{\r\n  color:black;\r\n  display: inline-block;\r\n  float:left;\r\n  border-style: outset;\r\n  border-width: 0.05em;\r\n  border-color: darkgray;\r\n  width: 1.2em;\r\n  height: 1.2em;\r\n  margin:0.1em;\r\n  text-align: center;\r\n}\r\n\r\n.abcCol{\r\n  color:white;\r\n  display: inline-block;\r\n  float:left;\r\n  border-style: outset;\r\n  border-width: 0.05em;\r\n  border-color: darkgray;\r\n  width: 1.2em;\r\n  height: 1.2em;\r\n  margin:0.1em;\r\n  text-align: center;\r\n}\r\n\r\n.abcColRight{\r\n  color:white;\r\n  display: inline-block;\r\n  float:right;\r\n  border-style: outset;\r\n  border-width: 0.05em;\r\n  border-color: darkgray;\r\n  width: 1.2em;\r\n  height: 1.2em;\r\n  margin:0.1em;\r\n  text-align: center;\r\n}\r\n.middleCutLine{\r\n  display: inline-block;\r\n  float:left;\r\n  border-style: outset;\r\n  border-width: 0.05em;\r\n  /*background-color: #E0E0FF;*/\r\n  background-color: black;\r\n  border-color: #f6f6FF;\r\n  width: 0.4em;\r\n  height: 1.2em;\r\n  margin:0.1em;\r\n  text-align: center;\r\n}\r\n@media (min-width: 300px) {\r\n  .game {\r\n    display: grid;\r\n    grid-template-columns: auto;\r\n    background-color: #2196F3;\r\n    padding: 10px;\r\n  }\r\n\r\n  .grid-item {\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    border: 1px solid rgba(0, 0, 0, 0.8);\r\n    padding: 20px;\r\n    font-size: 30px;\r\n    text-align: center;\r\n  }\r\n}\r\n.game {\r\n  border-style: inset;\r\n  /*border-width: 0.05em;*/\r\n  border-spacing: 0;\r\n  border-color: #f6f6FF;\r\n  background-color: black;\r\n  padding: 0.05em;\r\n\r\n  /*min-width: 375px;*/\r\n  display: inline-block;\r\n  float:left;\r\n}\r\n\r\n.cell {\r\n  display: inline-block;\r\n  float:left;\r\n  border-style: outset;\r\n  border-width: 0.05em;\r\n  /*background-color: #E0E0FF;*/\r\n  background-color: #1668b5;\r\n  border-color: #f6f6FF;\r\n  width: 1.2em;\r\n  height: 1.2em;\r\n  margin:0.1em;\r\n  text-align: center;\r\n}\r\n\r\n.cellHoverGreen:hover {\r\n  background-color: darkgreen;\r\n}\r\n\r\n.cellHoverRed:hover {\r\n  background-color: darkred;\r\n}\r\n\r\n@media only screen and (max-width: 700px) {\r\n  .clear {\r\n    clear:both;\r\n  }\r\n}\r\n\r\n.cardState{\r\n  width: 20vw;\r\n  max-width: 250px;\r\n}\r\n\r\n\r\n</style>\r\n","<template>\r\n  <div id=\"q-app\" class=\"bg-image\" style=\"min-height: 100vh;\">\r\n    <div class=\"q-pa-md row items-start q-gutter-md \">\r\n\r\n      <q-card bordered class=\"my-card\" flat style=\"background: radial-gradient(circle, #383838 0%, #1d1d1d 100%)\">\r\n\r\n        <q-slide-transition>\r\n\r\n          <div v-show=\"expandedPic\">\r\n\r\n            <WelcomeLabel></WelcomeLabel>\r\n\r\n            <!--BattleshipSettings></BattleshipSettings-->\r\n          </div>\r\n\r\n        </q-slide-transition>\r\n        <q-btn\r\n          :icon=\"expandedPic ?'keyboard_arrow_up' : 'keyboard_arrow_down'\"\r\n          color=\"grey\"\r\n          dense\r\n          flat\r\n          round\r\n          @click=\"expandedPic = !expandedPic;expanded = !expanded\"\r\n        ></q-btn>\r\n\r\n        <q-card-actions>\r\n          <q-space></q-space>\r\n          <q-btn\r\n            :icon=\"expanded ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\"\r\n            color=\"white\"\r\n            dense\r\n            flat\r\n            round\r\n            @click=\"expanded = !expanded ; expandedPic = !expandedPic\"\r\n          ></q-btn>\r\n        </q-card-actions>\r\n\r\n        <q-slide-transition>\r\n          <div v-show=\"expanded\">\r\n            <q-separator></q-separator>\r\n            <q-card-section class=\"text-subitle2 text-white\">\r\n              <q-card-section class=\"text-subitle2 text-white text-center\">\r\n              <q-img class=\"b-img text-center\"\r\n                     src=\"images/battleship.jpg\"\r\n              ></q-img>\r\n                </q-card-section>\r\n              <!--BattleshipStepper></BattleshipStepper-->\r\n                <BattleshipState></BattleshipState>\r\n              <Battleground></Battleground>\r\n                <!--BattlefildSizeSlider :propsName=\"example\"></BattlefildSizeSlider-->\r\n            </q-card-section>\r\n          </div>\r\n        </q-slide-transition>\r\n      </q-card>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport WelcomeLabel from \"components/WelcomeLabel\";\r\nimport BattleshipSettings from \"components/BattleshipSettings\";\r\nimport Battleground from \"components/Battleground\";\r\nimport BattleshipState from \"components/BattleshipState\";\r\n//import BattlefildSizeSlider from \"components/BattlefildSizeSlider\";\r\n//import BattleshipStepper from \"components/BattleshipStepper\";\r\nimport {ref} from 'vue'\r\n\r\nexport default {\r\n  name: \"BattleshipGame.vue\",\r\n  probs:{\r\n    testData: {\r\n      skrri: \"99\",\r\n      type:'test',\r\n      kp: true\r\n    }\r\n  },\r\n  components: {\r\n    WelcomeLabel,\r\n    //BattleshipSettings,\r\n    Battleground,\r\n    BattleshipState,\r\n    //BattlefildSizeSlider:BattlefildSizeSlider,\r\n    //BattleshipStepper, BattleshipStepper,\r\n\r\n  },\r\n  setup() {\r\n    return {\r\n      expandedPic: ref(true),\r\n      expanded: ref(false),\r\n      example: 'Send this variable to the child',\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.my-card {\r\n  width: 90%;\r\n  max-width: 95%;\r\n  /*display: block;*/\r\n}\r\n\r\n.bg-image {\r\n  background-image: url(\"/images/seaBackground1Wide.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n\r\n@media (min-width: 300px) {\r\n  .b-img{\r\n    max-width:60vw;\r\n  }\r\n}\r\n@media (min-width: 721px) {\r\n  .b-img{\r\n    max-width:50vw;\r\n  }\r\n}\r\n\r\n@media (min-width: 1001px) {\r\n  .b-img{\r\n    max-width:40vw;\r\n  }\r\n}\r\n\r\n</style>\r\n"],"names":[],"sourceRoot":""}